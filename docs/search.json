{"Classes/RVS_Checkbox/States.html#/s:12RVS_CheckboxAAC6StatesO3offyA2DmF":{"name":"off","abstract":"<p>Control is in &ldquo;off&rdquo; state, which displays a 􀂒 in the default.</p>","parent_name":"States"},"Classes/RVS_Checkbox/States.html#/s:12RVS_CheckboxAAC6StatesO5clearyA2DmF":{"name":"clear","abstract":"<p>Control is in &ldquo;clear&rdquo; state, which displays a 􀃞 in the default.</p>","parent_name":"States"},"Classes/RVS_Checkbox/States.html#/s:12RVS_CheckboxAAC6StatesO2onyA2DmF":{"name":"on","abstract":"<p>Control is in &ldquo;on&rdquo; state, which displays a 􀃳 in the default.</p>","parent_name":"States"},"Classes/RVS_Checkbox/States.html":{"name":"States","abstract":"<p>These Int-based enum values define the possible switch states.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/s:12RVS_CheckboxAAC9nextStateAB6StatesOvp":{"name":"nextState","abstract":"<p>This is the public, read-only accessor for the next state.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/s:12RVS_CheckboxAAC13checkboxStateAB6StatesOvp":{"name":"checkboxState","abstract":"<p>This holds the control&rsquo;s current state (before any changes).</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/s:12RVS_CheckboxAAC16isUsingSFSymbolsSbvp":{"name":"isUsingSFSymbols","abstract":"<p>If true, then the control will not use the dynamically-generated images, and will, instead, use standard SFSymbols square images.","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@M@RVS_Checkbox@objc(cs)RVS_Checkbox(py)onImage":{"name":"onImage","abstract":"<p>This is the image to be displayed in an &ldquo;ON&rdquo; state.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@M@RVS_Checkbox@objc(cs)RVS_Checkbox(py)offImage":{"name":"offImage","abstract":"<p>This is the image to be displayed in an &ldquo;OFF&rdquo; state.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@M@RVS_Checkbox@objc(cs)RVS_Checkbox(py)clearImage":{"name":"clearImage","abstract":"<p>This is the image to be displayed in a &ldquo;CLEAR&rdquo; (&ldquo;OFF,&rdquo; if two-state) state.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@M@RVS_Checkbox@objc(cs)RVS_Checkbox(py)isThreeState":{"name":"isThreeState","abstract":"<p>If this is true, then control is three state (OFF-CLEAR-ON). Otherwise (default), it is two state (OFF-ON).</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@M@RVS_Checkbox@objc(cs)RVS_Checkbox(py)useOffImageForClear":{"name":"useOffImageForClear","abstract":"<p>If this is true (default is false), then CLEAR will use the image supplied for the three-state OFF.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@M@RVS_Checkbox@objc(cs)RVS_Checkbox(py)useHaptics":{"name":"useHaptics","abstract":"<p>If this is true (default), then the control will use subtle haptics. These will not happen for programmatic set; only for direct UI interaction.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/s:12RVS_CheckboxAAC5valueSivp":{"name":"value","abstract":"<p>This is the control value, as an Int:</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/s:12RVS_CheckboxAAC7isClearSbvp":{"name":"isClear","abstract":"<p>This returns true, if the control is currently in &ldquo;CLEAR&rdquo; state (which is also off, for two-state).","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/s:12RVS_CheckboxAAC5isOffSbvp":{"name":"isOff","abstract":"<p>This returns true, if the control is in &ldquo;OFF&rdquo; state (three state), or either &ldquo;off&rdquo; or &ldquo;clear&rdquo; (two-state).","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@CM@RVS_Checkbox@objc(cs)RVS_Checkbox(py)on":{"name":"isOn","abstract":"<p>This returns true, if the control is in ON state.","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@CM@RVS_Checkbox@objc(cs)RVS_Checkbox(im)setOn:animated:":{"name":"setOn(_:animated:)","abstract":"<p>This sets the control to either ON or OFF. It can be animated.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/s:12RVS_CheckboxAAC8setClear8animatedySb_tF":{"name":"setClear(animated:)","abstract":"<p>This sets the control to CLEAR (or OFF, in two-state). It can be animated.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/s:12RVS_CheckboxAAC8setState_8animatedyAB6StatesO_SbtF":{"name":"setState(_:animated:)","abstract":"<p>This explicitly sets the control state. It can be animated.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/s:12RVS_CheckboxAAC8setValue_8animatedySi_SbtF":{"name":"setValue(_:animated:)","abstract":"<p>This explicitly sets the control state. It can be animated.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@CM@RVS_Checkbox@objc(cs)RVS_Checkbox(py)tintColor":{"name":"tintColor","abstract":"<p>The property is overridden, so we will trigger a redraw, if it changes.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@CM@RVS_Checkbox@objc(cs)RVS_Checkbox(im)layoutSubviews":{"name":"layoutSubviews()","abstract":"<p>It&rsquo;s important for the background to be clear.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@CM@RVS_Checkbox@objc(cs)RVS_Checkbox(im)drawRect:":{"name":"draw(_:)","abstract":"<p>This draws the control, dimming, if tracking, and over the control.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@CM@RVS_Checkbox@objc(cs)RVS_Checkbox(im)beginTrackingWithTouch:withEvent:":{"name":"beginTracking(_:with:)","abstract":"<p>Called when the user starts a press.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@CM@RVS_Checkbox@objc(cs)RVS_Checkbox(im)continueTrackingWithTouch:withEvent:":{"name":"continueTracking(_:with:)","abstract":"<p>Called when the user starts a press.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@CM@RVS_Checkbox@objc(cs)RVS_Checkbox(im)endTrackingWithTouch:withEvent:":{"name":"endTracking(_:with:)","abstract":"<p>Called when the user ends a press.","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html#/c:@CM@RVS_Checkbox@objc(cs)RVS_Checkbox(im)cancelTrackingWithEvent:":{"name":"cancelTracking(with:)","abstract":"<p>Called when a touch is canceled.</p>","parent_name":"RVS_Checkbox"},"Classes/RVS_Checkbox.html":{"name":"RVS_Checkbox","abstract":"<p>This class provides a simple Swift-only module that implements a &ldquo;checkbox&rdquo; to replace the standard <a href=\"https://developer.apple.com/documentation/uikit/uiswitch\"><code>UISwitch</code></a>.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"}}